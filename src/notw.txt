一. 選擇標註方式 
1.object detection with bounding boxes 
2.semantic segmentation with polygons
3.semantic segmentation with masks

二. configure data 資料取用
format : use img from <set manually> ${image}

三. label name 標籤名字
可以增加標籤的名字 並且用顏色區分

四. configure setting 
1. img zoom
2. control for zoom in and zoom out
3. rotate img 
4. display label => 統一先放page bottom 
5. add filter for long list of labels 

~~~~使用bounding box 做示範~~~~~~~~
五. start for label img
1. click label name and set the region on photo 
2. 操作上 由小至大 
3. if the label are finish and user is continue to label another object ,former label can be locked.(非常重要)
4. 可以跳過照片不進行標註操作 分成skip || update 
5. 左上角有跳回去的按鈕 只對以操作過的進行資料跳躍 => 只對已經selectFiles進行二次操作
6. 依照圖片上傳順序進行命名
7. skip 在console 裡面為2 update 為 1 並且會顯示在預覽操作頁面 顯示圖片的處理

五. 預覽操作葉面
1. 針對實際有label的圖片 會顯示complete 
2. id = 上傳的順序 
3. 預覽方式分為List 以及 grid => 線性布局以及格式布局 
4. 可以依照照片的狀態進行排列 包括是否完成標註,操作的狀態

六. 輸出顯示
1. 格式: json , json-min , csv , tsv , coco
2. 輸出後之json檔案會顯示多種操作 包括id , annotations(操作完成是使用update || skip) 以及原本圖片的長寬 使否有圖片旋轉 標註的x ,y,長度,寬度
標註方式,使用的標籤的名字,上傳時間,操作完成時間


4/9 
生圖那邊 (imgdisplaypage)
1. 現在點任何一張的select 會讓圖片顯示全部改成batch1的圖片 (看起來應該是因為useffect)
2. 因為現在生圖前面的流程還沒有create project 沒有帶專案名稱到url 查詢字串
   所以會是往一個名稱為空的project去上傳圖片
3. try again 裡面剩餘次數現在是寫死的 會需要再串後端的count
4.新增adminPage
5.連結彥君的後端版本功能
6.生徒新流程 => 選擇img generation => 先創建新專案 => 將projectname 導入到img generation process 可以讓圖片直接傳入


4/10 note
確認navigate路徑正確性 
0.5版本
1. 創建專案 Create.js 先獲取專案名字 => 回到project.js選取專案 跳入/Step?project=${projectName} => 上傳圖片/UploadImg?projectname=${projectname} 做完之後跳回/Step?project=${projectname}
=> 上傳需求 跳轉至/Requirment?projectname=${projectname} => 傳送完畢跳回/Step?project=${projectname} => 跳入confirmImg.js的/ConfirmImg?projectname=${projectname} =>後續步驟不贅述

confirm path 
1. ConfirmImg.js獲取projectname 並將const projectname_confirm1 = projectname => 2. ModelSelectionPage.js 抓取projectname_confirm1 => 3. PromptInputPage.js維持projecyname_confirm1 => imgdisplaypage.js 維持projectname_confirm1
 => 回傳至confirmImg.js?projectname=${projectname}

 img normal path
 1. CreateProjectPage.js選擇imgGeneration => 2.Create.js創建專案名稱 projectname => 3. ModelSelectionPage轉換成projectname_process2 => 4.PromptInputPage維持projectname_process2
 => 5.ImgDisplayPage.js維持projectname_process2 => 傳入對應的後端api => navigate到/Step?project=${projectname_process2}  注意: /Step?project=${projectname}

 但是還是有點小問題 requirement傳送會有問題